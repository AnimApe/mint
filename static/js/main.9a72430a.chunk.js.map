{"version":3,"sources":["contracts/mmc5.js","redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","redux/data/whitelisted.js","redux/data/signProofs.js","components/MinterLayout.js","App.js","components/fonts.js","components/theme.js","serviceWorker.js","index.js"],"names":["abi","initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","weth","name","totalSupply","cost","whitelistIsOn","paused","maxSupply","batchSupply","batch","batchMinted","batchMintedForBuyer","batchSaleIsOn","wlCost","superWlCost","alphaWlCost","maxMintAmountPerTx","superWLMaxMintAmountPerTx","alphaWlMaxMintAmountPerTx","error","ownNfts","dataReducer","maxMintAmountPerWl","maxMintAmountPerSuperWl","maxMintAmountPerAlphaWl","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","wlLevel","dispatch","a","getState","methods","call","whitelistMintEnabled","console","log","batchSaleEnabled","connectFailed","updateAccount","whitelistedAddresses","buyer","signature","getProof","address","signaturesMap","Map","forEach","v","voucher","set","toLowerCase","NFTVaucher","get","ConnectPage","props","w","base","h","alignItems","justifyContent","textAlign","direction","sm","mb","md","button","onClick","display","px","py","border","fontSize","textTransform","fontFamily","rounded","borderRadius","color","bg","mt","span","align","justify","width","p","App","useDispatch","useSelector","useState","feedback","setFeedback","setLoading","setClaimingNft","useDisclosure","isOpen","onOpen","onClose","document","body","style","URLSearchParams","window","location","search","showHead","claimNFTs","_amount","proof","_cost","total","toString","mint","send","gasLimit","to","from","value","once","err","receipt","on","then","contatore","setContatore","updateCounter","amount","updateValue","Minter","pt","spacing","height","src","alt","objectFit","alignContent","letterSpacing","borderColor","borderWidth","fontWeight","cursor","e","preventDefault","handleClick","lg","getData","setTimeout","useEffect","ai","mainText","detectEthereumProvider","provider","ethereum","Web3EthContract","setProvider","Web3","request","method","accounts","eth","handleRevert","chainId","SmartContractObj","reload","isWhitelistOn","proofNotInWhitelist","proofIsInWhitelist","limitCrossed","maxAmount","getNFTs","closeOnOverlayClick","isCentered","size","motionPreset","xl","wrap","minH","boxSize","Fonts","styles","theme","extendTheme","fonts","Boolean","hostname","match","ReactDOM","render","initialColorMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9a72430a.chunk.js","sourcesContent":["const abi =[\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_hiddenMetadataUri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"ApprovalCallerNotOwnerNorApproved\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"ApprovalQueryForNonexistentToken\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"ApprovalToCurrentOwner\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"ApproveToCaller\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"BalanceQueryForZeroAddress\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MintToZeroAddress\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"MintZeroQuantity\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"OwnerQueryForNonexistentToken\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"TransferCallerNotOwnerNorApproved\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"TransferFromIncorrectOwner\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"TransferToNonERC721ReceiverImplementer\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"TransferToZeroAddress\",\n\t\t\"type\": \"error\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Approval\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": false,\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ApprovalForAll\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"previousOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"OwnershipTransferred\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"anonymous\": false,\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"indexed\": true,\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"Transfer\",\n\t\t\"type\": \"event\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"alphaWhitelistClaimed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"alphaWlCost\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"alphaWlMaxMintAmountPerTx\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"approve\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"balanceOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"batch\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"batchMinted\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"wlLevel\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"batchMintedForBuyer\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"minted\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"batchSaleEnabled\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"batchSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"cost\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getApproved\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"getChainID\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"hiddenMetadataUri\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"isApprovedForAll\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"maxMintAmountPerAlphaWl\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"maxMintAmountPerSuperWl\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"maxMintAmountPerTx\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"maxMintAmountPerWl\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"maxSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_mintAmount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"wlLevel\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\t\t\"name\": \"signature\",\n\t\t\t\t\t\t\"type\": \"bytes\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct AnimApes.NFTVoucher\",\n\t\t\t\t\"name\": \"v\",\n\t\t\t\t\"type\": \"tuple\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"mint\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_mintAmount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_receiver\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"mintForAddress\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"name\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"nonWhitelistClaimed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"owner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"ownerOf\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"paused\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"renounceOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"revealed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes\",\n\t\t\t\t\"name\": \"_data\",\n\t\t\t\t\"type\": \"bytes\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"safeTransferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_alphaWlCost\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setAlphaWlCost\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_alphaWlMaxMintAmountPerTx\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setAlphaWlMaxMintAmountPerTx\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"operator\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"approved\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setApprovalForAll\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"_state\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setBatchSaleEnabled\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_batch\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_batchSupply\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setBatchSupply\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_cost\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setCost\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_hiddenMetadataUri\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setHiddenMetadataUri\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerAlphaWl\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setMaxMintAmountPerAlphaWl\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerSuperWl\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setMaxMintAmountPerSuperWl\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerTx\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setMaxMintAmountPerTx\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerWl\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setMaxMintAmountPerWl\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerTx\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_superWLMaxMintAmountPerTx\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_alphaWlMaxMintAmountPerTx\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setMaxMintAmountsPerTx\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerWl\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerSuperWl\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_maxMintAmountPerAlphaWl\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setMaxMintAmountsPerWl\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"_state\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setPaused\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"_state\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setRevealed\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_signer\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setSigner\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_superWLMaxMintAmountPerTx\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setSuperWLMaxMintAmountPerTx\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_superWlCost\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setSuperWlCost\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_uriPrefix\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setUriPrefix\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_uriSuffix\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setUriSuffix\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"_state\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setWhitelistMintEnabled\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_wlCost\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"setWlCost\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"superWLMaxMintAmountPerTx\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"superWhitelistClaimed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"superWlCost\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bytes4\",\n\t\t\t\t\"name\": \"interfaceId\",\n\t\t\t\t\"type\": \"bytes4\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"supportsInterface\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"symbol\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"tokenURI\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"totalSupply\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"from\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"to\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferFrom\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"newOwner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"transferOwnership\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"uriPrefix\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"uriSuffix\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"_owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"walletOfOwner\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"whitelistClaimed\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"whitelistMintEnabled\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"withdraw\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"wlCost\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]\n\nexport default abi;\n","const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n          account: action.payload.account,\n          smartContract: action.payload.smartContract,\n          weth: action.payload.weth,\n          web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  whitelistIsOn: true,\n  paused: false,\n  maxSupply: 4888,\n  batchSupply: 888,\n  batch: 1,\n  batchMinted: 0,\n  batchMintedForBuyer: 0,\n  batchSaleIsOn: true,\n  wlCost: 0,\n  superWlCost: 0,\n  alphaWlCost: 0,\n  maxMintAmountPerTx: 2,\n  superWLMaxMintAmountPerTx: 3,\n  alphaWlMaxMintAmountPerTx: 5,\n  error: false,\n  errorMsg: \"\",\n  ownNfts: []\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n          error: false,\n          errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n\n      return {\n        ...state,\n        loading: false,\n          totalSupply: action.payload.totalSupply,\n          cost: action.payload.cost,\n          whitelistIsOn: action.payload.whitelistIsOn,\n          paused: action.payload.paused,\n          maxSupply: action.payload.maxSupply,\n          batchSupply: action.payload.batchSupply,\n          batch: action.payload.batch,\n          batchMinted: action.payload.batchMinted,\n          batchMintedForBuyer: action.payload.batchMintedForBuyer,\n          batchSaleIsOn: action.payload.batchSaleIsOn,\n          wlCost: action.payload.wlCost,\n          superWlCost: action.payload.superWlCost,\n          alphaWlCost: action.payload.alphaWlCost,\n          maxMintAmountPerTx: action.payload.maxMintAmountPerTx,\n          superWLMaxMintAmountPerTx: action.payload.superWLMaxMintAmountPerTx,\n          alphaWlMaxMintAmountPerTx: action.payload.alphaWlMaxMintAmountPerTx,\n          maxMintAmountPerWl: action.payload.maxMintAmountPerWl,\n          maxMintAmountPerSuperWl: action.payload.maxMintAmountPerSuperWl,\n          maxMintAmountPerAlphaWl: action.payload.maxMintAmountPerAlphaWl,\n\n          error: false,\n          errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          error: true,\n          errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\n// function sleep(ms) {\n//   return new Promise(resolve => setTimeout(resolve, ms));\n// }\n\n\n\nexport const fetchData = (account, wlLevel) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let paused = await store\n        .getState()\n        .blockchain.smartContract.methods.paused()\n        .call();\n      let whitelistIsOn = await store\n        .getState()\n        .blockchain.smartContract.methods.whitelistMintEnabled()\n        .call();\n      console.log(\"whitelistIsOn:\", whitelistIsOn);\n\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let maxSupply = 4888;\n\n      let batchSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.batchSupply()\n        .call();\n      batchSupply = batchSupply - 1;\n\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n\n      let wlCost = await store\n        .getState()\n        .blockchain.smartContract.methods.wlCost()\n        .call();\n      let superWlCost = await store\n        .getState()\n        .blockchain.smartContract.methods.superWlCost()\n        .call();\n      let alphaWlCost = await store\n        .getState()\n        .blockchain.smartContract.methods.alphaWlCost()\n        .call();\n      let maxMintAmountPerTx = await store\n        .getState()\n        .blockchain.smartContract.methods.maxMintAmountPerTx()\n        .call();\n      maxMintAmountPerTx = maxMintAmountPerTx - 1;\n\n      let superWLMaxMintAmountPerTx = await store\n        .getState()\n        .blockchain.smartContract.methods.superWLMaxMintAmountPerTx()\n        .call();\n      superWLMaxMintAmountPerTx = superWLMaxMintAmountPerTx - 1;\n      let alphaWlMaxMintAmountPerTx = await store\n        .getState()\n        .blockchain.smartContract.methods.alphaWlMaxMintAmountPerTx()\n        .call();\n      alphaWlMaxMintAmountPerTx = alphaWlMaxMintAmountPerTx - 1;\n      let batchSaleIsOn = await store\n        .getState()\n        .blockchain.smartContract.methods.batchSaleEnabled()\n        .call();\n      let maxMintAmountPerWl = await store\n        .getState()\n        .blockchain.smartContract.methods.maxMintAmountPerWl()\n        .call();\n      maxMintAmountPerWl = maxMintAmountPerWl - 1;\n\n      let maxMintAmountPerSuperWl = await store\n        .getState()\n        .blockchain.smartContract.methods.maxMintAmountPerSuperWl()\n        .call();\n      maxMintAmountPerSuperWl = maxMintAmountPerSuperWl - 1;\n      let maxMintAmountPerAlphaWl = await store\n        .getState()\n        .blockchain.smartContract.methods.maxMintAmountPerAlphaWl()\n        .call();\n      maxMintAmountPerAlphaWl = maxMintAmountPerAlphaWl - 1;\n\n      let batch = await store\n        .getState()\n        .blockchain.smartContract.methods.batch()\n        .call();\n      console.log(\"Batch\" + batch)\n      let batchMintedForBuyer = await store\n        .getState()\n        .blockchain.smartContract.methods.batchMintedForBuyer(account, wlLevel)\n        .call();\n      let batchMinted = await store\n        .getState()\n        .blockchain.smartContract.methods.batchMinted()\n        .call();\n      console.log(\"BatchMinted\" + batchMinted)\n      console.log({\n        totalSupply,\n        cost,\n        whitelistIsOn,\n        paused,\n        maxSupply,\n        batch,\n        batchSupply,\n        batchMinted,\n        batchMintedForBuyer,\n        wlCost,\n        superWlCost,\n        alphaWlCost,\n        maxMintAmountPerTx,\n        superWLMaxMintAmountPerTx,\n        alphaWlMaxMintAmountPerTx,\n        batchSaleIsOn,\n        maxMintAmountPerWl,\n        maxMintAmountPerSuperWl,\n        maxMintAmountPerAlphaWl\n      });\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          cost,\n          whitelistIsOn,\n          paused,\n          maxSupply,\n          batch,\n          batchSupply,\n          batchMinted,\n          batchMintedForBuyer,\n          wlCost,\n          superWlCost,\n          alphaWlCost,\n          maxMintAmountPerTx,\n          superWLMaxMintAmountPerTx,\n          alphaWlMaxMintAmountPerTx,\n          batchSaleIsOn,\n          maxMintAmountPerWl,\n          maxMintAmountPerSuperWl,\n          maxMintAmountPerAlphaWl\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport abi from \"../../contracts/mmc5\";\nimport detectEthereumProvider from '@metamask/detect-provider'\n// log\nimport {\n  fetchData\n} from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const provider = await detectEthereumProvider();\n    if (provider) {\n      const ethereum = window.ethereum;\n\n      Web3EthContract.setProvider(provider);\n      let web3 = new Web3(provider);\n      // try {\n      //   // check if the chain to connect to is installed\n      //   await ethereum.request({\n      //     method: 'wallet_switchEthereumChain',\n      //     params: [{\n      //       chainId: '0x1'\n      //     }], // chainId must be in hexadecimal numbers\n      //   });\n      // } catch (error) {\n      //   // This error code indicates that the chain has not been added to MetaMask\n      //   // if it is not, then install it into the user MetaMask\n\n      //   console.error(error);\n      // }\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        web3.eth.handleRevert = true;\n        const chainId = await ethereum.request({\n          method: 'eth_chainId'\n        });\n        console.log(\"chain id: \" + chainId);\n\n        if (chainId === '0x1') {\n\n          const SmartContractObj = new Web3EthContract(\n            abi, \"0xB9252199A4c33399f5DCdCA04d972b8c727b1cFe\"\n          );\n          //\"0x466d60c4C560220D73563262FDC4b2cA384DE215\"\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum\"));\n        }\n      } catch (err) {\n        console.log(err)\n        dispatch(connectFailed(\"Something went wrong\"));\n      }\n    } else {\n\n      console.error('Please install MetaMask!')\n    }\n\n\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({\n      account: account\n    }));\n    dispatch(fetchData(account));\n  };\n};","const whitelistedAddresses = [{\n    wlLevel: 1,\n    buyer: '0x0d35f085f4C4203225153c8b8430101b32e08a79',\n    signature: '0x62e9db0024df7de66b1250e8b723406ea27b1d962f91a61dbb0c45f7fcebb60e4851f4c88ce2e35d58537064eba9c36bd0505ac7197a2e26030b3578f77bbff61c'\n}, {\n    //0x0d35f085f4C4203225153c8b8430101b32e08a79\n\n    wlLevel: 2,\n    buyer: '0xCcA1A9Faf1be41eE24Ed36ecfD36e04847BDFeb6',\n    signature: '0x62e9db0024df7de66b1250e8b723406ea27b1d962f91a61dbb0c45f7fcebb60e4851f4c88ce2e35d58537064eba9c36bd0505ac7197a2e26030b3578f77bbff61c'\n}, {\n    wlLevel: 3,\n    buyer: '0x2Ae4f24E3958Be05EC6f5F702a5E4242696d4944',\n    signature: '0x04018f39bdd4a2031d2e6f1755e616bd9ecd2a068d2b1f65f3f9a20526d54cac1b3d061d8df3f2e4a4f0fefb6fba6829f204963763c10b5d8c9249c144791dc61c'\n}, {\n    wlLevel: 1,\n    buyer: '0x2B368de91937CEafbe9d8e96fe9156054DCA7EF2',\n    signature: '0x94b0e18570ec8e2aa1abe5c4918dd6c957d032e9f5a949b4bf468df55f0f74e9003c8c59f54b551a832dc3584e9123bf2ca1965d05bcd04f5f7e962f265bc24f1b'\n}, {\n    wlLevel: 2,\n    buyer: '0x99B60642e67916f475c44951203cF681b577FD29',\n    signature: '0xce9d8bd5d978729e91cbcc9471915ceaf558f6023bd8073fc7d80e6cbeacaa460794de0d96fd5f08cc37d11f9ffe066c56459ae5d91c78e511613c02b51d06191b'\n}, {\n    wlLevel: 3,\n    buyer: '0x3cB413158fdF593201d2091beB61C35B6BB9E942',\n    signature: '0xc77dbc950ad3936174831e932b9c6259d5e4ce40ecd76804b0c412eaec990fed6165837040f3aab4c01d2d22a844777dbf9ff7d75a60415b3a97629f53aef2b81c'\n}, {\n    wlLevel: 1,\n    buyer: '0xD9115A4A3D27CF2725363a5251b17fF4001fc180',\n    signature: '0xc3f11511752637e9a74f20afb0650c563848dcfefa628771feab6db035e3954a43b90dcbc3f6eefda96aafe35fc6acae6228738bc80dda563930398ffebb6db21c'\n}];\n/**\n *{\n     wlLevel: 2,\n     buyer: '0xCcA1A9Faf1be41eE24Ed36ecfD36e04847BDFeb6',\n     signature: '0x85172260f044eda169e87596daf474480dab25293847e35d621d7d20b2f9c9f912c720ec83fc04daaf8e5895b7ef91209dcf8ffacd23fac56c01c5afcd1796ab1c'\n }\n */\n// {\n//     wlLevel: 2,\n//     buyer: '0xcca1a9faf1be41ee24ed36ecfd36e04847bdfeb6',\n//     signature: '0x5f45f531da85a913272a7216ddb16dacfa9392bf24583935617939ad4a19c11003f859599ce02ee06a2649b8dd32d5a127bbce32986ca5566b69787b5bdfdf051b'\n// },\n\nexport default whitelistedAddresses;","import whitelistedAddresses from \"./whitelisted\";\n\nconst getProof = (address) => {\n    const signaturesMap = new Map();\n    const NFTVaucherVoid = {\n        'wlLevel': 0,\n        'signature': '0x85172260f044eda169e87596daf474480dab25293847e35d621d7d20b2f9c9f912c720ec83fc04daaf8e5895b7ef91209dcf8ffacd23fac56c01c5afcd1796ab1c'\n    }\n\n    whitelistedAddresses.forEach(v => {\n        let voucher = {};\n        voucher.wlLevel = v.wlLevel;\n        voucher.signature = v.signature;\n        signaturesMap.set(v.buyer.toLowerCase(), voucher);\n    })\n\n    const NFTVaucher = signaturesMap.get(address.toLowerCase());\n\n\n    if (typeof (NFTVaucher) !== \"undefined\" && NFTVaucher !== null) {\n\n        return NFTVaucher;\n    }\n\n    return NFTVaucherVoid;\n}\n\nexport default getProof;","import React from \"react\";\nimport {\n    chakra,\n    Box,\n    useColorModeValue,\n    Stack,\n    Image,\n    Flex,\n    Link,\n    VStack,\n} from \"@chakra-ui/react\";\n\nconst ConnectPage = (props) => {\n    //console.log(\"showHead\", props.showHead);\n    return (\n        <>\n            <Box w={\n                {\n                    base: \"full\",\n                }\n\n            }\n                h={\n                    {\n                        base: \"fill\",\n                    }\n\n                }\n                alignItems=\"center\"\n                justifyContent=\"center\" textAlign={\"center\"} >\n\n                <Stack direction={\n                    {\n                        base: \"column\",\n                        sm: \"row\"\n                    }\n                }\n                    mb={\n                        {\n                            base: 4,\n                            md: 8\n                        }\n                    }\n\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    textAlign=\"center\"\n\n                >\n\n                    <chakra.button\n                        onClick={\n                            props.onClick\n                        }\n                        w={[\"full\", , \"auto\"]}\n                        display=\"inline-flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                        px={5}\n                        py={3}\n                        border=\"solid transparent\"\n                        fontSize=\"5xl\"\n                        textTransform=\"uppercase\"\n                        fontFamily='lulo-clean-w01-one-bold'\n                        rounded=\"lg\"\n                        borderRadius=\"48\"\n                        color=\"white\"\n                        bg=\"#8f0100\"\n                        mt={\"80\"}\n\n                    >\n                        <chakra.span color=\"#feffc1\">CONNECT</chakra.span>\n                    </chakra.button>\n\n\n                </Stack>\n                <Flex align={'center'} justify={'center'} width={\"auto\"}>\n                    <Box>\n                        <chakra.p\n                            mb={4}\n                            fontSize=\"lxl\"\n                            color=\"#8f0100\"\n                            fontFamily='lulo-clean-w01-one-bold'\n\n                            textTransform=\"uppercase\"\n                        >Make sure your wallet is connected to Ethereum Mainnet</chakra.p>\n\n                    </Box>\n                </Flex>\n            </Box>\n        </>\n\n    );\n};\n\nexport default ConnectPage;","import React, {\n  useEffect,\n  useState\n} from \"react\";\nimport {\n  useDispatch,\n  useSelector\n} from \"react-redux\";\nimport {\n  connect\n} from \"./redux/blockchain/blockchainActions\";\nimport {\n  fetchData\n} from \"./redux/data/dataActions\";\nimport getProof from \"./redux/data/signProofs\";\nimport {\n  chakra,\n  Box,\n  VStack,\n  Center,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  useDisclosure,\n  Flex,\n  Image,\n  SimpleGrid,\n  HStack,\n  useColorModeValue,\n  Stack,\n  Text\n} from '@chakra-ui/react';\n\nimport ConnectPage from \"./components/MinterLayout\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [feedback, setFeedback] = useState(\"\");\n  let paused = data.paused;\n  let maxSupply = data.maxSupply;\n  let batchSupply = data.batchSupply;\n  let wlCost = data.wlCost;\n  let superWlCost = data.superWlCost;\n  let alphaWlCost = data.alphaWlCost;\n  let maxMintAmountPerTx = data.maxMintAmountPerTx;\n  let superWLMaxMintAmountPerTx = data.superWLMaxMintAmountPerTx;\n  let alphaWlMaxMintAmountPerTx = data.alphaWlMaxMintAmountPerTx;\n  let dataloading = data.loading;\n\n\n  let totalSupply = data.totalSupply;\n  let cost = data.cost;\n  let batch = data.batch;\n  console.log(\"batch just read:\" + batch);\n  let batchMinted = data.batchMinted;\n  console.log(\"batchMinted just read:\" + batchMinted);\n  let batchMintedForBuyer = data.batchMintedForBuyer;\n  let batchSaleIsOn = data.batchSaleIsOn;\n  let maxMintAmountPerWl = data.maxMintAmountPerWl;\n  let maxMintAmountPerSuperWl = data.maxMintAmountPerSuperWl;\n  let maxMintAmountPerAlphaWl = data.maxMintAmountPerAlphaWl;\n\n\n  const [loading, setLoading] = useState(true)\n  const [updating, setUpdating] = useState(true)\n\n  const [claimingNft, setClaimingNft] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure()\n  //#0066CC\n  document.body.style = 'background: #000000;';\n  const queryParams = new URLSearchParams(window.location.search)\n  let showHead = \"no\";// queryParams.get(\"showhead\")\n  console.log(\"showHead= \" + showHead);\n\n  //Function called by the MINT button\n  const getNFTs = (_amount) => {\n    if (!paused) {\n      //Here get the vaucher for the whitelisted address if present\n      const proof = getProof(blockchain.account.toLowerCase());\n      console.log(\"account \" + blockchain.account.toLowerCase());\n      console.log(\"proof: \", proof);\n      //Check if the whitelist only sale is active\n      const isWhitelistOn = data.whitelistIsOn;\n      console.log(\"getNfts whitelist:\", isWhitelistOn)\n      const proofNotInWhitelist = isWhitelistOn && proof.wlLevel === 0;\n      const proofIsInWhitelist = isWhitelistOn && !(proof.wlLevel === 0);\n      //Check if the amount request exceed the max amount of token per TX based on the wlLevel\n      // let nftOwned = data.ownNfts;\n      // let nftOwnedCount = 0;\n      // nftOwned.forEach(element => {\n      //   console.log(element);\n      //   nftOwnedCount++;\n      // });\n      // console.log(\"amount:\" + _amount);\n      // console.log(\"Number of tokens owned by\" + blockchain.account + \":\" + nftOwned + \" lenght:\" + nftOwnedCount)\n      // const ownedPlusAmount = nftOwnedCount + _amount;\n      // console.log(\"ownedPlusAmount: \" + ownedPlusAmount);\n\n      const wlLevel = proof.wlLevel;\n      let limitCrossed = false;\n      let batchMintedForBuyer = data.batchMintedForBuyer;\n\n\n      console.log(maxMintAmountPerWl + \" \" + maxMintAmountPerSuperWl + \" \" + maxMintAmountPerAlphaWl)\n      let maxAmount = maxMintAmountPerWl;\n      if (wlLevel <= 1) {\n        limitCrossed = ~~batchMintedForBuyer + _amount > maxMintAmountPerWl;\n      }\n      if (wlLevel === 2) {\n        maxAmount = maxMintAmountPerSuperWl;\n        limitCrossed = ~~batchMintedForBuyer + _amount > maxMintAmountPerSuperWl;\n      }\n      if (wlLevel === 3) {\n        maxAmount = maxMintAmountPerAlphaWl;\n        limitCrossed = ~~batchMintedForBuyer + _amount > maxMintAmountPerAlphaWl;\n        console.log(batchMintedForBuyer, _amount, batchMintedForBuyer + _amount, maxMintAmountPerAlphaWl)\n      }\n\n      if (!limitCrossed) { //!limitCrossed\n        //If the amount is under the limit, check if it is open only to whitelisted addresses\n        if (proofNotInWhitelist) {\n          //alert(\"WE are not in whitelist pre-sale\")\n          onClose();\n          setFeedback(\"This is a presale only for Whitelisted addresses.\");\n          setClaimingNft(false);\n        } else if (!isWhitelistOn || proofIsInWhitelist) {\n          // let maxAmount = maxMintAmountPerTx;\n          // if (wlLevel === 0) {\n          //   limitCrossed = _amount > maxMintAmountPerTx;\n          // }\n          // if (wlLevel === 1) {\n          //   limitCrossed = _amount > maxMintAmountPerTx;\n          // }\n          // if (wlLevel === 2) {\n          //   maxAmount = superWLMaxMintAmountPerTx;\n          //   limitCrossed = _amount > superWLMaxMintAmountPerTx;\n          // }\n          // if (wlLevel === 3) {\n          //   maxAmount = alphaWlMaxMintAmountPerTx;\n          //   limitCrossed = _amount > alphaWlMaxMintAmountPerTx;\n          // }\n\n          //claim the tokens\n          claimNFTs(_amount, proof);\n\n        }\n      } else {\n        //Oops, too many tokens requested\n        onClose();\n\n        setFeedback(\"Youcan't mint another \" + _amount + \" token(s) in this batch, you already own \" + batchMintedForBuyer + \" and can mint up to: \" + maxAmount + \".\");\n        setClaimingNft(false);\n\n      }\n\n    } else {\n      onClose();\n      setClaimingNft(false);\n\n    }\n\n  }\n\n\n  const claimNFTs = (_amount, proof) => {\n    console.log(\"claimNFT \" + proof.signature);\n    setClaimingNft(true);\n\n    //const isWhitelistOn = data.whitelistIsOn;\n    const wlLevel = proof.wlLevel;\n    let _cost = cost;\n\n    if (wlLevel === 0) {\n      _cost = _amount === maxMintAmountPerTx ? _cost - (_cost * 5 / 100) : _cost;\n    }\n    if (wlLevel === 1) {\n\n      _cost = _amount === maxMintAmountPerTx ? wlCost - (wlCost * 5 / 100) : wlCost;\n    }\n    if (wlLevel === 2) {\n      _cost = _amount === superWLMaxMintAmountPerTx ? superWlCost - (superWlCost * 5 / 100) : superWlCost;\n    }\n    if (wlLevel === 3) {\n      _cost = _amount === alphaWlMaxMintAmountPerTx ? alphaWlCost - (alphaWlCost * 5 / 100) : alphaWlCost;\n    }\n    let total = (_cost * _amount).toString();\n    blockchain.smartContract.methods\n      .mint(_amount, proof)\n      .send({\n        gasLimit: \"210000\",\n        to: \"0xB9252199A4c33399f5DCdCA04d972b8c727b1cFe\",\n        from: blockchain.account,\n        value: total,\n      })\n      .once(\"error\", (err, receipt) => {\n\n        onClose();\n        setFeedback(\"Seems transaction was cancelled, please check on Etherscan\");\n        setClaimingNft(false);\n\n      }).on('receipt', function (receipt) {\n\n        console.log(receipt);\n\n      })\n      .then((receipt) => {\n\n        onClose();\n        setFeedback(\n          \"Success! You minted\" + _amount + \" AnimApes! Let's party in discord!! \"\n        );\n        dispatch(fetchData(blockchain.account, wlLevel));\n        setClaimingNft(false);\n      });\n\n\n\n\n  };\n  const [contatore, setContatore] = useState(2);\n  const updateCounter = (amount) => {\n    console.log(\"update counter \" + amount + \" \" + blockchain.account);\n    if (blockchain.account !== \"\" ||\n      blockchain.smartContract != null) {\n      const proof = getProof(blockchain.account.toLowerCase());\n      const wlLevel = proof.wlLevel;\n\n      let updateValue = contatore + amount;\n      // console.log(proof);\n      // console.log(maxMintAmountPerTx);\n      // console.log(superWLMaxMintAmountPerTx);\n      // console.log(alphaWlMaxMintAmountPerTx);\n      if (updateValue < 1) {\n        updateValue = 1;\n      }\n      if (wlLevel < 2 & (updateValue >= maxMintAmountPerTx || amount === 100)) {\n        updateValue = maxMintAmountPerTx;\n\n      }\n      if (wlLevel === 2 & (updateValue >= superWLMaxMintAmountPerTx || amount === 100)) {\n        updateValue = superWLMaxMintAmountPerTx;\n\n      }\n      if (wlLevel === 3 & (updateValue >= alphaWlMaxMintAmountPerTx || amount === 100)) {\n        updateValue = alphaWlMaxMintAmountPerTx;\n\n      }\n\n\n      console.log(\"Value to update:\" + updateValue);\n      setContatore(updateValue);\n\n    }\n  }\n\n  const decodeWhitelist = () => {\n    let decoded = \"\"\n    if (blockchain.account != null) {\n      const proof = getProof(blockchain.account);\n      const wlLevel = proof.wlLevel;\n      if (wlLevel === 1) {\n        decoded = \"Whitelist\";\n      }\n      if (wlLevel === 2) {\n        decoded = \"Super Whitelist\";\n      }\n      if (wlLevel === 3) {\n        decoded = \"Alpha Whitelist\";\n      }\n      return decoded;\n    }\n    return decoded\n  }\n  const Minter = (props) => {\n    console.log(\"dentro Minter:\");\n    console.log(props);\n    let decoded = \"\"\n    if (blockchain.account != null) {\n      const proof = getProof(blockchain.account);\n      const wlLevel = proof.wlLevel;\n      if (wlLevel === 1) {\n        decoded = \"Whitelist\";\n      }\n      if (wlLevel === 2) {\n        decoded = \"Super Whitelist\";\n      }\n      if (wlLevel === 3) {\n        decoded = \"Alpha Whitelist\";\n      }\n    }\n\n    return (\n      <>\n        <Stack pt={\"20\"} direction={{ base: 'column', md: 'row' }} justifyContent={\"center\"} spacing={\"16\"}>\n          {props.showHead === \"yes\" && (\n            <Flex align={'center'} justify={'center'} width={\"auto\"} height={\"auto\"}>\n              <Image\n                src=\"https://static.wixstatic.com/media/65d140_d7ac609efdd4453cbad86bf0ec0d5e29~mv2.png\"\n\n                alt=\"AnimApe\"\n\n                w={\"83%\"}\n                h={\"auto\"}\n                objectFit={'fill'}\n              />\n            </Flex>\n          )}\n\n          <Flex align={'center'} justify={'center'} width={\"auto\"} justifyContent={\"space-evenly\"}>\n            {/* <Stack spacing={6} w={'full'} maxW={'lg'}> */}\n\n            <Stack direction={{ base: 'column' }} spacing={12} alignContent=\"center\" justifyContent=\"center\" textAlign=\"center\" >\n\n              {/* <Flex align={'center'} justify={'center'} width={\"auto\"} height={\"auto\"}>\n                <Image\n                  src=\"https://static.wixstatic.com/media/65d140_3f9493ca56194c02abe3ccc7ce0d459b~mv2.png\"\n                  alt=\"AnimApe\"\n                  fit=\"cover\"\n                  w={\"40%\"}\n                  h={\"auto\"}\n                  loading=\"lazy\"\n\n                  pb={20}\n\n                />\n              </Flex> */}\n\n              {paused && (\n                <>\n                  <chakra.p\n                    fontSize=\"24px\"\n                    color=\"white\"\n                    fontFamily='helvetica'\n                    letterSpacing=\"wider\"\n\n                  >the sale has not opened yet, please wait patiently</chakra.p>\n                </>\n              )}\n              {\n                (data.loading) && (\n                  <>\n                    <chakra.p\n                      fontSize=\"24px\"\n                      color=\"white\"\n                      fontFamily='helvetica'\n                      letterSpacing=\"wider\"\n\n                    >Loading, please wait. This might take 15 seconds.</chakra.p>\n                  </>\n                )}\n              {\n                (!paused && !data.loading) && (\n                  <Box width={\"100%\"} height={\"100%\"} >\n                    <chakra.p\n                      mb={4}\n                      fontSize=\"lxl\"\n                      color=\"#8f0100\"\n                      fontFamily='lulo-clean-w01-one-bold'\n\n                      textTransform=\"uppercase\"\n                    >{props.feedback}</chakra.p>\n                    {/* <chakra.div\n                  fontSize=\"3xl\"\n                  fontWeight={\"bold\"}\n                  color=\"white\"\n                  fontFamily='helvetica'\n\n\n                >Hello {blockchain.account}</chakra.div>\n                <chakra.div\n                  fontSize=\"3xl\"\n                  fontWeight={\"bold\"}\n                  color=\"white\"\n                  fontFamily='helvetica'\n\n\n                >{decoded}</chakra.div> */}\n\n                    <HStack alignItems=\"center\"\n                      justifyContent=\"center\" textAlign=\"center\" spacing={\"40px\"}>\n\n                      <chakra.span\n                        rounded=\"lg\"\n                        borderRadius=\"8\"\n                        color=\"#feffc1\"\n                        bg=\"#8f0100\"\n                        borderColor={\"#8f0100\"}\n                        borderWidth=\"2px\"\n                        textAlign={['center']}\n                        w={8}\n                        fontSize=\"3xl\"\n                        fontWeight={\"bold\"}\n                        fontFamily=\"DIN-Next-W01-Light\"\n                        cursor={\"pointer\"} onClick={() => {\n\n                          updateCounter(-1);\n                        }}>-</chakra.span>\n                      <Box\n                        borderColor=\"#000000\"\n                        bg=\"#000000\"\n                        width=\"40px\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\" textAlign=\"center\"\n\n                      ><chakra.span color=\"#8f0100\"\n                        fontSize=\"6xl\"\n                        bg=\"#000000\"\n\n                        fontFamily='lulo-clean-w01-one-bold'>{contatore}</chakra.span>\n                      </Box>\n                      <chakra.span rounded=\"lg\"\n                        borderRadius=\"8\"\n                        color=\"#feffc1\"\n                        bg=\"#8f0100\"\n                        borderColor={\"#8f0100\"}\n                        borderWidth=\"2px\"\n                        textAlign={['center']}\n                        w={8}\n                        fontSize=\"3xl\"\n                        fontWeight={\"bold\"}\n                        fontFamily=\"DIN-Next-W01-Light\"\n                        cursor={\"pointer\"} onClick={() => {\n\n                          updateCounter(1);\n                        }}>+</chakra.span>\n                      <chakra.button\n                        onClick={(e) => {\n                          e.preventDefault();\n                          //props.handleClick(contatore);\n                          updateCounter(100);\n                        }}\n                        w={\"32\"}\n                        display=\"inline-flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                        border=\"solid transparent\"\n                        fontSize=\"3xl\"\n                        textTransform=\"uppercase\"\n                        fontFamily='lulo-clean-w01-one-bold'\n                        rounded=\"lg\"\n                        borderRadius=\"8\"\n                        color=\"white\"\n                        bg=\"#8f0100\"\n                      >\n                        <chakra.span width=\"200px\" color=\"#feffc1\">MAX</chakra.span>\n                      </chakra.button>\n\n                    </HStack>\n                    <chakra.button\n                      onClick={(e) => {\n                        e.preventDefault();\n                        props.handleClick(contatore);\n                      }}\n                      w={{ base: \"auto\", md: \"400px\" }}\n                      px={5}\n                      py={3}\n                      border=\"solid transparent\"\n                      fontSize=\"5xl\"\n                      textTransform=\"uppercase\"\n                      fontFamily='lulo-clean-w01-one-bold'\n                      rounded=\"lg\"\n                      borderRadius=\"48\"\n                      color=\"white\"\n                      bg=\"#8f0100\"\n                    >\n                      <chakra.span width=\"200px\" color=\"#feffc1\">MINT</chakra.span>\n                    </chakra.button>\n                  </Box>\n                )}\n              <Box alignContent=\"center\" justifyContent=\"center\" textAlign=\"center\">\n                <chakra.p\n                  fontSize=\"24px\"\n                  color=\"white\"\n                  fontFamily='helvetica'\n                  pt={12}\n\n                >Minted/Supply</chakra.p>\n                {/* <chakra.p\n                  fontSize=\"24px\"\n                  color=\"white\"\n                  fontFamily='helvetica'\n                  letterSpacing=\"wider\"\n\n                >{props.totalSupply}/4888</chakra.p> */}\n                {batchSaleIsOn && (\n                  <>\n                    {/* <chakra.p\n                      fontSize=\"24px\"\n                      color=\"white\"\n                      fontFamily='helvetica'\n                      letterSpacing=\"wider\"\n\n                    >Batch Sale nr: {props.batch}</chakra.p> */}\n                    <chakra.p\n                      fontSize=\"24px\"\n                      color=\"white\"\n                      fontFamily='helvetica'\n                      letterSpacing=\"wider\"\n\n                    >{props.batchMinted}/{props.batchSupply}</chakra.p>\n                  </>\n                )}\n                <chakra.p\n                  pt={8}\n                  fontFamily='helvetica'\n                  fontSize={{ base: 'md', lg: 'lg' }} color={'white'}\n                >Max mint: 5% discount</chakra.p>\n                <chakra.p\n                  fontFamily='helvetica'\n                  fontSize={{ base: 'md', lg: 'lg' }} color={'white'}\n                >First 20 minters share $3000</chakra.p>\n                <chakra.p\n                  fontFamily='helvetica'\n                  fontSize={{ base: 'md', lg: 'lg' }} color={'white'}\n                >Holders share 6 ETH, 88 winners</chakra.p>\n              </Box>\n            </Stack>\n            {/* </Stack> */}\n          </Flex>\n          <Flex align={'center'} justify={'center'} width={\"auto\"}>\n            <Image\n\n              w=\"600px\"\n              h=\"auto\"\n              alt={'sparkle roll'}\n              objectFit={'fill'}\n              src={\n                'https://static.wixstatic.com/media/65d140_9d94931599994146983fb20fe13db71a~mv2.gif'\n              }\n            />\n\n          </Flex>\n        </Stack>\n        {/* <chakra.p\n          pr={{ base: 0, lg: 16 }}\n          mb={4}\n          fontSize=\"md\"\n          color=\"#8f0100\"\n          fontFamily='lulo-clean-w01-one-bold'\n          letterSpacing=\"wider\"\n          textTransform=\"uppercase\"\n        >{props.feedback}</chakra.p> */}\n      </>\n\n    );\n  };\n\n\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      if (loading === true) {\n        setTimeout(() => setLoading(false), 15000)\n\n      }\n      const proof = getProof(blockchain.account.toLowerCase());\n\n      dispatch(fetchData(blockchain.account, proof.wlLevel));\n\n    }\n  };\n\n  useEffect(() => {\n\n    getData();\n  }, [blockchain.account]);\n\n  return (\n\n    <Box textAlign=\"center\"\n      fontSize=\"xl\"\n      bg=\"#000000\" w={\"full\"}\n      h={\"fill\"} >\n\n      {\n        blockchain.account === \"\" ||\n          blockchain.smartContract === null ? (<  VStack spacing={\n            2\n          }\n            ai={\n              \"center\"\n            } >\n            <ConnectPage mainText=\"\"\n              showHead={showHead}\n              onClick={\n                (e) => {\n                  e.preventDefault();\n                  dispatch(connect());\n                  getData();\n                }\n              }\n              feedback={feedback}\n            /> </VStack >\n\n\n        ) : (\n\n          <Box textAlign=\"center\"\n            fontSize=\"xl\"\n            bg=\"#000000\" w={\"full\"}\n            h={\"fill\"} >\n            <VStack alignItems=\"center\"\n              justifyContent=\"center\" >\n\n\n              <Minter handleClick={\n                (contatore) => {\n\n                  onOpen()\n                  getNFTs(contatore);\n                  getData();\n                }\n              } totalSupply={data.totalSupply}\n                showHead={showHead}\n                feedback={feedback}\n                batch={batch}\n                batchSaleIsOn={batchSaleIsOn}\n                batchSupply={batchSupply}\n                batchMinted={batchMinted}\n                paused={paused}\n                batchMintedForBuyer={batchMintedForBuyer}\n              >\n\n              </Minter>\n\n              <Modal closeOnOverlayClick={false}\n                isOpen={\n                  isOpen\n                }\n                onClose={\n                  onClose\n                }\n                isCentered size=\"xl\" motionPreset='slideInBottom' >\n                <ModalOverlay />\n                <ModalContent bg=\"#8f0100\" >\n\n                  <ModalBody borderRadius='lg'>\n                    <Center bg=\"#8f0100\">\n                      <Flex\n                        align=\"center\"\n                        justify={{ base: \"center\", md: \"space-around\", xl: \"space-between\" }}\n                        direction={{ base: \"column-reverse\", md: \"row\" }}\n                        wrap=\"no-wrap\"\n                        minH=\"70vh\"\n                        px={8}\n                        mb={16}\n                      >\n                        <VStack >\n                          <Image boxSize='300px'\n                            objectFit='cover' borderRadius='15px' src={\n                              'https://static.wixstatic.com/media/65d140_34f4c10aaa2445c8991b48c934bd4002~mv2.gif'\n                            }>\n\n                          </Image>\n                          <chakra.span fontSize=\"2xl\"\n                            textTransform=\"uppercase\"\n                            fontFamily='lulo-clean-w01-one-bold'\n                            letterSpacing=\"wide\" color=\"white\"> MINT IN PROGRESS </chakra.span>\n                        </VStack>\n\n\n                      </Flex>\n\n                    </Center>\n\n                  </ModalBody> </ModalContent >\n              </Modal>\n\n\n            </VStack>\n          </Box>\n        )\n      } </Box >\n  );\n}\n\nexport default App;\n","import * as React from 'react'\nimport { Global } from '@emotion/react'\n\nconst Fonts = () => (\n  <Global\n    styles={`\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W01-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/f70da45a-a05c-490c-ad62-7db4894b012a.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/f70da45a-a05c-490c-ad62-7db4894b012a.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/c5749443-93da-4592-b794-42f28d62ef72.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/73805f15-38e4-4fb7-8a08-d56bf29b483b.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/874bbc4a-0091-49f0-93ef-ea4e69c3cc7a.svg#874bbc4a-0091-49f0-93ef-ea4e69c3cc7a\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W02-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/8c0d8b0f-d7d6-4a72-a418-c2373e4cbf27.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/8c0d8b0f-d7d6-4a72-a418-c2373e4cbf27.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/192dac76-a6d9-413d-bb74-22308f2e0cc5.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/47584448-98c4-436c-89b9-8d6fbeb2a776.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/375c70e5-6822-492b-8408-7cd350440af7.svg#375c70e5-6822-492b-8408-7cd350440af7\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-LT-W10-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9fe262dc-5a55-4d75-91a4-aed76bd32190.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9fe262dc-5a55-4d75-91a4-aed76bd32190.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0a3939d0-3833-4db3-8b85-f64c2b3350d2.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/1b128d6d-126f-4c9c-8f87-3e7d30a1671c.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/b791c850-fde1-48b3-adf0-8998d55b0866.svg#b791c850-fde1-48b3-adf0-8998d55b0866\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W01-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3e0b2cd7-9657-438b-b4af-e04122e8f1f7.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3e0b2cd7-9657-438b-b4af-e04122e8f1f7.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/bc176270-17fa-4c78-a343-9fe52824e501.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3516f91d-ac48-42cd-acfe-1be691152cc4.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/d1b1e866-a411-42ba-8f75-72bf28e23694.svg#d1b1e866-a411-42ba-8f75-72bf28e23694\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W02-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/48e5a0e1-2d56-46e5-8fc4-3d6d5c973cbf.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/48e5a0e1-2d56-46e5-8fc4-3d6d5c973cbf.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/07d62b21-8d7a-4c36-be86-d32ab1089972.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/c0050890-bbed-44b9-94df-2611d72dbb06.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9f774d17-c03a-418e-a375-34f3beecbc7a.svg#9f774d17-c03a-418e-a375-34f3beecbc7a\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"DIN-Next-W10-Light\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3d009cd7-c8fe-40c0-93da-74f4ea8c530b.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/3d009cd7-c8fe-40c0-93da-74f4ea8c530b.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/a9e95a29-98a7-404a-90ee-1929ad09c696.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0a7663fd-eae8-4e50-a67a-225271f8cceb.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/58ae9be9-5d95-44b6-8b6c-e6da6a46822c.svg#58ae9be9-5d95-44b6-8b6c-e6da6a46822c\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W01-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/ea95b44a-eab7-4bd1-861c-e73535e7f652.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/ea95b44a-eab7-4bd1-861c-e73535e7f652.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/4021a3b9-f782-438b-aeb4-c008109a8b64.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/669f79ed-002c-4ff6-965c-9da453968504.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/d17bc040-9e8b-4397-8356-8153f4a64edf.svg#d17bc040-9e8b-4397-8356-8153f4a64edf\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-W02-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/e4bd4516-4480-43df-aa6e-4e9b9029f53e.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/e4bd4516-4480-43df-aa6e-4e9b9029f53e.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/b56b944e-bbe0-4450-a241-de2125d3e682.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/7da02f05-ae8b-43a1-aeb9-83b3c0527c06.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/66cac56e-d017-4544-9d0c-f7d978f0c5c2.svg#66cac56e-d017-4544-9d0c-f7d978f0c5c2\") format(\"svg\");\n}\n@font-face {\n  font-display: block;\n  font-family: \"Helvetica-LT-W10-Roman\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/686a6a06-e711-4bd2-b393-8504a497bb3c.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/686a6a06-e711-4bd2-b393-8504a497bb3c.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/6f8d1983-4d34-4fa4-9110-988f6c495757.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/7903ee3f-e9ab-4bdc-b7d2-d232de2da580.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/9c58e9ea-fdea-4b9c-b0f9-0a2157389ed0.svg#9c58e9ea-fdea-4b9c-b0f9-0a2157389ed0\") format(\"svg\");\n}\n@font-face {\n  font-family: \"wf_b9cf1341b9ec4945852ac0f86\";\n  src: url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/woff2/file.woff2\") format(\"woff2\"),\n    url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/woff/file.woff\") format(\"woff\"),\n    url(\"https://static.wixstatic.com/ufonts/d228b9_b9cf1341b9ec4945852ac0f86b827fc1/ttf/file.ttf\") format(\"ttf\");\n}\n@font-face {\n  font-family: \"wf_e4b1e1e4405343d9ad0296011\";\n  src: url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/woff2/file.woff2\") format(\"woff2\"),\n    url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/woff/file.woff\") format(\"woff\"),\n    url(\"https://static.wixstatic.com/ufonts/364126_e4b1e1e4405343d9ad02960110373431/ttf/file.ttf\") format(\"ttf\");\n}\n\n@font-face {\n  font-display: block;\n  font-family: \"Lulo-Clean-W01-One-Bold\";\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0163ac22-50a7-406e-aa64-c62ee6fbf3d7.eot?#iefix\");\n  src: url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/0163ac22-50a7-406e-aa64-c62ee6fbf3d7.eot?#iefix\") format(\"eot\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/aee74cb3-c913-4b54-9722-6001c92325f2.woff2\") format(\"woff2\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/80de9d5d-ab5f-40ce-911b-104e51e93d7c.woff\") format(\"woff\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/1b46b05b-cfdd-4d82-8c2f-5c6cfba1fe60.ttf\") format(\"truetype\"), url(\"//static.parastorage.com/services/third-party/fonts/user-site-fonts/fonts/be340f0b-a2d4-41df-acb1-4dc124330a88.svg#be340f0b-a2d4-41df-acb1-4dc124330a88\") format(\"svg\");\n}\n@font-face {\n  font-family: \"Lulo-Clean-W05-One-Bold\";\n  src: url(\"//static.parastorage.com/services/santa-resources/resources/viewer/user-site-fonts/fonts/Lulo_Clean/v1/LuloCleanW05-OneBold.woff2\") format(\"woff2\"),\n    url(\"//static.parastorage.com/services/santa-resources/resources/viewer/user-site-fonts/fonts/Lulo_Clean/v1/LuloCleanW05-OneBold.woff\") format(\"woff\");\n}\n        `}\n  />\n)\n\nexport default Fonts;\n","import {\n    extendTheme,\n    theme as base,\n} from '@chakra-ui/react'\n\nconst theme = extendTheme({\n    fonts: {\n\n        body: `Helvetica-W01-Bold, Helvetica-W02-Bold, Helvetica-LT-W10-Bold, DIN-Next-W01-Light, DIN-Next-W02-Light, DIN-Next-W10-Light, Helvetica-W01-Roman, Helvetica-W02-Roman, Helvetica-LT-W10-Roman, wf_b9cf1341b9ec4945852ac0f86, wf_e4b1e1e4405343d9ad0296011, Lulo-Clean-W01-One-Bold, Lulo-Clean-W05-One-Bold, ${base.fonts?.body}`,\n    },\n})\n\nexport default theme","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ChakraProvider, ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Fonts from './components/fonts';\nimport theme from './components/theme';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/store\";\nimport {\n  Provider\n} from \"react-redux\";\nReactDOM.render(\n  <Provider store={store}>\n    <StrictMode>\n      <ChakraProvider theme={theme} >\n        <Fonts />\n        <ColorModeScript initialColorMode=\"dark\" />\n        <App />\n      </ChakraProvider>\n    </StrictMode>\n  </Provider>,\n  document.getElementById('dapp_minter')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}